AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: ipv-cri-uk-passport-back

Globals:
  Function:
    Timeout: 40
    Environment:
      Variables:
        JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1

Parameters:
  Environment:
    Type: String
  ProvisionedConcurrentExecutions:
    Type: Number
    Description: >-
      The number of lambda execution environments to keep permanently ready to reduce cold starts.
    Default: 0

Conditions:
  AddProvisionedConcurrency: !Not
    - !Equals
      - !Ref ProvisionedConcurrentExecutions
      -  0

  IsDevelopmentEnvironment: !Not
    - !Or
      - !Equals [ !Ref Environment, "build"]
      - !Equals [ !Ref Environment, "staging"]
      - !Equals [ !Ref Environment, "integration"]
      - !Equals [ !Ref Environment, "production"]

Resources:
  IPVCriUKPassportPrivateAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub IPV Passport Back Private API Gateway ${Environment}
      EndpointConfiguration:
        Type: PRIVATE
      Auth:
        ResourcePolicy:
          CustomStatements:
            - Action: 'execute-api:Invoke'
              Effect: Allow
              Principal: '*'
              Resource:
                - 'execute-api:/*'
            - Action: 'execute-api:Invoke'
              Effect: Deny
              Principal: '*'
              Resource:
                - 'execute-api:/*'
              Condition:
                StringNotEquals:
                  'aws:SourceVpce': !If
                    - IsDevelopmentEnvironment
                    - !ImportValue "network-shared-development-ApiGatewayVpcEndpointId"
                    - Fn::ImportValue:
                        !Sub "networking-${Environment}-ApiGatewayVpcEndpointId"
      StageName: !Sub ${Environment}
      AccessLogSetting:
        DestinationArn: !GetAtt IPVCriUKPassportPrivateAPILogGroup.Arn
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }

  IPVCriUKPassportPrivateAPILogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-PassportBackPrivate-API-GW-AccessLogs
      RetentionInDays: 14

  IPVCriUKPassportPrivateAPILogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref IPVCriUKPassportPrivateAPILogGroup

  IPVCriUKPassportAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: IPV CRI UK Passport API Gateway
      StageName: !Sub ${Environment}
      Auth:
        ApiKeyRequired: true
        UsagePlan:
          CreateUsagePlan: PER_API
      AccessLogSetting:
        DestinationArn: !GetAtt IPVCriUKPassportAPILogGroup.Arn
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }

  IPVCriUKPassportAPILogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-CriPassport-API-GW-AccessLogs
      RetentionInDays: 14

  IPVCriUKPassportAPILogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref IPVCriUKPassportAPILogGroup

  IPVCriUKPassportIssueCredentialFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "ipv-passport-issue-credential-${Environment}"
      Handler: uk.gov.di.ipv.cri.passport.issuecredential.IssueCredentialHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/issuecredential
      Architectures:
        - arm64
      MemorySize: 2048
      Environment:
        Variables:
          ENVIRONMENT: !Sub "${Environment}"
          DCS_RESPONSE_TABLE_NAME: !Select [1, !Split ['/', !GetAtt DCSResponseTable.Arn]]
          CRI_PASSPORT_ACCESS_TOKENS_TABLE_NAME: !Select [1, !Split ['/', !GetAtt CRIPassportAccessTokensTable.Arn]]
          VERIFIABLE_CREDENTIAL_SIGNING_KEY_ID_PARAM: !Sub "/${Environment}/credentialIssuers/ukPassport/self/verifiableCredentialKmsSigningKeyId"
          MAX_JWT_TTL: !Sub "/${Environment}/credentialIssuers/ukPassport/self/maxJwtTtl"
          VERIFIABLE_CREDENTIAL_ISSUER_PARAM: !Sub "/${Environment}/credentialIssuers/ukPassport/self/verifiableCredentialIssuer"
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
          CREDENTIAL_ISSUERS_CONFIG_PARAM_PREFIX: !Sub "/${Environment}/credentialIssuers/ukPassport/clients"
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DCSResponseTable
        - DynamoDBCrudPolicy:
            TableName: !Ref CRIPassportAccessTokensTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/credentialIssuers/ukPassport/self/verifiableCredentialKmsSigningKeyId
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/credentialIssuers/ukPassport/self/verifiableCredentialIssuer
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/credentialIssuers/ukPassport/self/maxJwtTtl
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/credentialIssuers/ukPassport/self/backendSessionTtl
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/credentialIssuers/ukPassport/clients/*
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - Statement:
            - Sid: kmsSigningKeyPermission
              Effect: Allow
              Action:
                - 'kms:sign'
              Resource:
                - !ImportValue PassportCriVcSigningKeyArn
            - Sid: auditEventQueueKmsEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
      Events:
        IPVCriUKPassportAPI:
          Type: Api
          Properties:
            RestApiId: !Ref IPVCriUKPassportAPI
            Path: /credentials/issue
            Method: POST
      AutoPublishAlias: live
      ProvisionedConcurrencyConfig:
        !If
          - AddProvisionedConcurrency
          - ProvisionedConcurrentExecutions: !Ref ProvisionedConcurrentExecutions
          - !Ref AWS::NoValue

  IPVCriUKPassportIssueCredentialFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub "/aws/lambda/${IPVCriUKPassportIssueCredentialFunction}"

  IPVCriUKPassportIssueCredentialFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref IPVCriUKPassportIssueCredentialFunctionLogGroup

  IPVCriUKPassportAccessTokenFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "ipv-passport-token-${Environment}"
      Handler: uk.gov.di.ipv.cri.passport.accesstoken.AccessTokenHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/accesstoken
      Architectures:
        - arm64
      MemorySize: 2048
      Environment:
        Variables:
          ENVIRONMENT: !Sub "${Environment}"
          CRI_PASSPORT_AUTH_CODES_TABLE_NAME: !Select [1, !Split ['/', !GetAtt CRIPassportAuthCodesTable.Arn]]
          CRI_PASSPORT_ACCESS_TOKENS_TABLE_NAME: !Select [1, !Split ['/', !GetAtt CRIPassportAccessTokensTable.Arn]]
          CREDENTIAL_ISSUERS_CONFIG_PARAM_PREFIX: !Sub "/${Environment}/credentialIssuers/ukPassport/clients"
          PASSPORT_CRI_CLIENT_AUTH_MAX_TTL: !Sub "/${Environment}/credentialIssuers/ukPassport/self/maxJwtTtl"
          PASSPORT_CRI_CLIENT_AUDIENCE: !Sub "/${Environment}/credentialIssuers/ukPassport/self/audienceForClients"
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CRIPassportAuthCodesTable
        - DynamoDBCrudPolicy:
            TableName: !Ref CRIPassportAccessTokensTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/credentialIssuers/ukPassport/self/audienceForClients
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/credentialIssuers/ukPassport/self/maxJwtTtl
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/credentialIssuers/ukPassport/self/backendSessionTtl
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/credentialIssuers/ukPassport/clients
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/credentialIssuers/ukPassport/clients/*
      Events:
        IPVCriUKPassportAPI:
          Type: Api
          Properties:
            RestApiId: !Ref IPVCriUKPassportAPI
            Path: /token
            Method: POST
      AutoPublishAlias: live
      ProvisionedConcurrencyConfig:
        !If
          - AddProvisionedConcurrency
          - ProvisionedConcurrentExecutions: !Ref ProvisionedConcurrentExecutions
          - !Ref AWS::NoValue

  IPVCriUKPassportAccessTokenFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub "/aws/lambda/${IPVCriUKPassportAccessTokenFunction}"

  IPVCriUKPassportAccessTokenFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref IPVCriUKPassportAccessTokenFunctionLogGroup

  IPVCriUKPassportAuthorizationCodeFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "ipv-passport-authorization-${Environment}"
      Handler: uk.gov.di.ipv.cri.passport.authorizationcode.AuthorizationCodeHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/authorizationcode
      Architectures:
        - arm64
      MemorySize: 2048
      Environment:
        Variables:
          ENVIRONMENT: !Sub "${Environment}"
          DCS_RESPONSE_TABLE_NAME: !Select [1, !Split ['/', !GetAtt DCSResponseTable.Arn]]
          CRI_PASSPORT_ACCESS_TOKENS_TABLE_NAME: !Select [1, !Split ['/', !GetAtt CRIPassportAccessTokensTable.Arn]]
          CRI_PASSPORT_AUTH_CODES_TABLE_NAME: !Select [1, !Split ['/', !GetAtt CRIPassportAuthCodesTable.Arn]]
          DCS_ENCRYPTION_CERT_PARAM: !Sub "/${Environment}/credentialIssuers/ukPassport/dcs/encryptionCertForPassportToEncrypt"
          DCS_SIGNING_CERT_PARAM: !Sub "/${Environment}/credentialIssuers/ukPassport/dcs/signingCertForPassportToVerify"
          PASSPORT_CRI_SIGNING_KEY_PARAM: !Sub "/${Environment}/credentialIssuers/ukPassport/self/signingKeyForPassportToSign"
          PASSPORT_CRI_ENCRYPTION_KEY_PARAM: !Sub "/${Environment}/credentialIssuers/ukPassport/self/encryptionKeyForPassportToDecrypt"
          PASSPORT_CRI_TLS_KEY_PARAM: !Sub "/${Environment}/credentialIssuers/ukPassport/self/tlsKey"
          PASSPORT_CRI_SIGNING_CERT_PARAM: !Sub "/${Environment}/credentialIssuers/ukPassport/self/signingCertForDcsToVerify"
          PASSPORT_CRI_ENCRYPTION_CERT_PARAM: !Sub "/${Environment}/credentialIssuers/ukPassport/self/encryptionCertForDcsToEncrypt"
          PASSPORT_CRI_TLS_CERT_PARAM: !Sub "/${Environment}/credentialIssuers/ukPassport/self/tlsCert"
          DCS_POST_URL_PARAM: !Sub "/${Environment}/credentialIssuers/ukPassport/dcs/postUrl"
          DCS_TLS_ROOT_CERT_PARAM: !Sub "/${Environment}/credentialIssuers/ukPassport/dcs/tlsRootCertificate"
          DCS_TLS_INTERMEDIATE_CERT_PARAM: !Sub "/${Environment}/credentialIssuers/ukPassport/dcs/tlsIntermediateCertificate"
          CREDENTIAL_ISSUERS_CONFIG_PARAM_PREFIX: !Sub "/${Environment}/credentialIssuers/ukPassport/clients"
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DCSResponseTable
        - DynamoDBCrudPolicy:
            TableName: !Ref CRIPassportAccessTokensTable
        - DynamoDBCrudPolicy:
            TableName: !Ref CRIPassportAuthCodesTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/credentialIssuers/ukPassport/*
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/credentialIssuers/ukPassport/self/backendSessionTtl
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - Statement:
            - Sid: auditEventQueueKmsEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
      Events:
        IPVCriUKPassportPrivateAPI:
          Type: Api
          Properties:
            RestApiId: !Ref IPVCriUKPassportPrivateAPI
            Path: /authorization
            Method: POST
      AutoPublishAlias: live
      ProvisionedConcurrencyConfig:
        !If
          - AddProvisionedConcurrency
          - ProvisionedConcurrentExecutions: !Ref ProvisionedConcurrentExecutions
          - !Ref AWS::NoValue

  IPVCriUKPassportAuthorizationCodeFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub "/aws/lambda/${IPVCriUKPassportAuthorizationCodeFunction}"

  IPVCriUKPassportAuthorizationCodeFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref IPVCriUKPassportAuthorizationCodeFunctionLogGroup

  IPVCriUKPassportJwTAuthorizationRequestFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "ipv-passport-jwt-authorization-request-${Environment}"
      Handler: uk.gov.di.ipv.cri.passport.jwtauthorizationrequest.JwtAuthorizationRequestHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/jwtauthorizationrequest
      Architectures:
        - arm64
      MemorySize: 2048
      Environment:
        Variables:
          CREDENTIAL_ISSUERS_CONFIG_PARAM_PREFIX: !Sub "/${Environment}/credentialIssuers/ukPassport/clients"
          PASSPORT_CRI_CLIENT_AUDIENCE: !Sub "/${Environment}/credentialIssuers/ukPassport/self/audienceForClients"
          PASSPORT_CRI_CLIENT_AUTH_MAX_TTL: !Sub "/${Environment}/credentialIssuers/ukPassport/self/maxJwtTtl"
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
          JAR_ENCRYPTION_KEY_ID_PARAM: !Sub "/${Environment}/credentialIssuers/ukPassport/self/jarKmsEncryptionKeyId"
          # for use in the integration-test
          JAR_KMS_PUBLIC_KEY_PARAM: !Sub "/${Environment}/credentialIssuers/ukPassport/self/jarKmsEncryptionPublicKey"
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: !Sub "${Environment}/credentialIssuers/ukPassport/clients/*"
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/credentialIssuers/ukPassport/clients
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/credentialIssuers/ukPassport/self/maxJwtTtl
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/credentialIssuers/ukPassport/self/audienceForClients
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/credentialIssuers/ukPassport/self/jarKmsEncryptionKeyId
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/credentialIssuers/ukPassport/self/jarKmsEncryptionPublicKey
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - Statement:
            - Sid: jarKmsEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue PassportCriEncryptionKeyArn
            - Sid: auditEventQueueKmsEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
      Events:
        IPVCriUKPassportPrivateAPI:
          Type: Api
          Properties:
            RestApiId: !Ref IPVCriUKPassportPrivateAPI
            Path: /jwt-authorization-request
            Method: POST
      AutoPublishAlias: live
      ProvisionedConcurrencyConfig:
        !If
          - AddProvisionedConcurrency
          - ProvisionedConcurrentExecutions: !Ref ProvisionedConcurrentExecutions
          - !Ref AWS::NoValue

  IPVCriUKPassportJwTAuthorizationRequestFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub "/aws/lambda/${IPVCriUKPassportJwTAuthorizationRequestFunction}"

  IPVCriUKPassportJwTAuthorizationRequestFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref IPVCriUKPassportJwTAuthorizationRequestFunctionLogGroup

  DCSResponseTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "dcs-response-${Environment}"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "resourceId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "resourceId"
          KeyType: "HASH"
      TimeToLiveSpecification:
        AttributeName: "ttl"
        Enabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId: !GetAtt DynamoDBKmsKey.Arn

  CRIPassportAuthCodesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "cri-passport-auth-codes-${Environment}"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "authCode"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "authCode"
          KeyType: "HASH"
      TimeToLiveSpecification:
        AttributeName: "ttl"
        Enabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId: !GetAtt DynamoDBKmsKey.Arn

  CRIPassportAccessTokensTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "cri-passport-access-tokens-${Environment}"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "accessToken"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "accessToken"
          KeyType: "HASH"
      TimeToLiveSpecification:
        AttributeName: "ttl"
        Enabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId: !GetAtt DynamoDBKmsKey.Arn

  DynamoDBKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub "dynamodb.${AWS::Region}.amazonaws.com"
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: "*"
            Condition:
              StringEquals:
                "kms:CallerAccount": !Sub "${AWS::AccountId}"
                "kms:ViaService": !Sub "dynamodb.${AWS::Region}.amazonaws.com"
Outputs:
  IPVCriUkPassportAPIGatewayID:
    Description: CRI UK Passport API Gateway ID
    Export:
      Name: !Sub "${AWS::StackName}-IPVCriUkPassportAPIGatewayID"
    Value: !Ref IPVCriUKPassportAPI
  IPVCriUkPassportPrivateAPIGatewayID:
    Description: CRI UK Passport Private API Gateway ID
    Export:
      Name: !Sub "IPVCriUkPassportPrivateAPIGatewayID-${Environment}"
    Value: !Ref IPVCriUKPassportPrivateAPI
  IpvCoreBackApiKeyId:
    Description: >
      The key id of the api key used by IPV Core to access passport back external api gateway
    Value: !Ref IPVCriUKPassportAPIApiKey
